{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/js/02-timer-class.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst input = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nstartBtn.disabled = true;\nconst days1 = document.querySelector('[data-days]');\nconst hours1 = document.querySelector('[data-hours]');\nconst minutes1 = document.querySelector('[data-minutes]');\nconst seconds1 = document.querySelector('[data-seconds]');\nlet userselectedDates;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userselectedDates = selectedDates[0].getTime();\n    if (userselectedDates < Date.now()) {\n      Notify.failure('Please choose a date in the future');\n      return;\n    }\n    startBtn.disabled = false;\n    clearClockFace();\n  },\n};\nflatpickr('#datetime-picker', options);\n\nstartBtn.addEventListener('click', () => {\n  input.disabled = true;\n  startBtn.disabled = true;\n  timer.start();\n});\n\nfunction updateClockFace({ days, hours, minutes, seconds }) {\n  days1.textContent = `${days}`;\n  hours1.textContent = `${hours}`;\n  minutes1.textContent = `${minutes}`;\n  seconds1.textContent = `${seconds}`;\n}\n\nfunction clearClockFace() {\n  updateClockFace(timer.convertMs(0));\n  timer.stop();\n}\n\nclass Timer {\n  constructor({ onTick }) {\n    this.intervalId = null;\n    this.onTick = onTick;\n  }\n\n  start() {\n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      if (currentTime >= userselectedDates) {\n        this.stop();\n        input.disabled = false;\n        startBtn.disabled = true;\n        Notify.info('Time is up');\n        return;\n      }\n      let deltaTime = userselectedDates - currentTime;\n      const time = this.convertMs(deltaTime);\n      this.onTick(time);\n      console.log('timer on');\n    }, 1000);\n  }\n\n  stop() {\n    clearInterval(this.intervalId);\n    console.log('timer off');\n  }\n\n  convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = this.addLeadingZero(Math.floor(ms / day));\n    const hours = this.addLeadingZero(Math.floor((ms % day) / hour));\n    const minutes = this.addLeadingZero(\n      Math.floor(((ms % day) % hour) / minute)\n    );\n    const seconds = this.addLeadingZero(\n      Math.floor((((ms % day) % hour) % minute) / second)\n    );\n\n    return { days, hours, minutes, seconds };\n  }\n\n  addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n  }\n}\n\nconst timer = new Timer({ onTick: updateClockFace });\n\n// class Timer {\n//   constructor(start, end, userTime, id) {\n//   }\n// }\n"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$6fe2690453cc450a$var$input","document","querySelector","$6fe2690453cc450a$var$startBtn","disabled","$6fe2690453cc450a$var$userselectedDates","$6fe2690453cc450a$var$days1","$6fe2690453cc450a$var$hours1","$6fe2690453cc450a$var$minutes1","$6fe2690453cc450a$var$seconds1","$6fe2690453cc450a$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","getTime","now","$h6c0i","Notify","failure","$6fe2690453cc450a$var$updateClockFace","$6fe2690453cc450a$var$timer","convertMs","stop","param","days","hours","minutes","seconds","textContent","concat","$dbdyf","addEventListener","start","Timer","onTick","this","intervalId","setInterval","currentTime","_this","info","deltaTime","time","console","log","clearInterval","ms","minute","second","hour","day","addLeadingZero","Math","floor","String","padStart"],"version":3,"file":"02-timer-class.211ac941.js.map"}