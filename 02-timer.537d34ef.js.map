{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,S,aAIMC,EAAQC,SAASC,cAAc,oBAC/BC,EAAWF,SAASC,cAAc,gBACxCC,EAASC,UAAW,EACpB,IAKIC,EALEC,EAAQL,SAASC,cAAc,eAC/BK,EAASN,SAASC,cAAc,gBAChCM,EAAWP,SAASC,cAAc,kBAClCO,EAAWR,SAASC,cAAc,kBACpCQ,EAAa,KAGXC,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EAEjBC,QAAA,SAAQC,IACNb,EAAoBa,EAAc,GAAGC,WACbJ,KAAKK,MAC3BC,EAAAC,OAAOC,QAAQ,qCAAsC,CACnDC,SAAU,gBAIdrB,EAASC,UAAW,EA2CtBqB,EAAgBC,EAAU,IAC1BC,I,GAdF,SAASA,IACPC,cAAclB,GACdmB,QAAQC,IAAI,Y,CAGd,SAASL,EAAgBM,G,IAAEC,EAAFD,EAAEC,KAAMC,EAARF,EAAQE,MAAOC,EAAfH,EAAeG,QAASC,EAAxBJ,EAAwBI,QAC/C7B,EAAM8B,YAAc,GAAQC,OAALL,GACvBzB,EAAO6B,YAAc,GAASC,OAANJ,GACxBzB,EAAS4B,YAAc,GAAWC,OAARH,GAC1BzB,EAAS2B,YAAc,GAAWC,OAARF,E,CAQ5B,SAAST,EAAUY,GAEjB,IACMC,EAASC,IACTC,EAAOF,KACPG,EAAa,GAAPD,EASZ,MAAO,CAAET,KAPIW,EAAeC,KAAKC,MAAMP,EAAKI,IAO7BT,MANDU,EAAeC,KAAKC,MAAMP,EAAMI,EAAOD,IAM/BP,QALNS,EAAeC,KAAKC,MAAMP,EAAOI,EAAOD,EAAQF,IAKjCJ,QAJfQ,EACdC,KAAKC,MAAMP,EAAQI,EAAOD,EAAQF,EATrB,M,CAejB,SAASI,EAAeG,GACtB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,EA7DnC,EAAAlD,EAAAmD,SAAU,mBAAoBtC,GAE9BR,EAAS+C,iBAAiB,SAAS,WACjClD,EAAMI,UAAW,EACjBD,EAASC,UAAW,EAKpBM,EAAayC,aAAY,WACvB,IAAMC,EAAcrC,KAAKK,MACzB,GAAIgC,GAAe/C,EAOjB,OANAsB,IACA3B,EAAMI,UAAW,EACjBD,EAASC,UAAW,OACpBiB,EAAAC,OAAO+B,KAAK,aAAc,CACxB7B,SAAU,eAKdC,EAAgBC,EADArB,EAAoB+C,IAEpCvB,QAAQC,IAAI,W,GACX,I","sources":["src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst input = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nstartBtn.disabled = true;\nconst days1 = document.querySelector('[data-days]');\nconst hours1 = document.querySelector('[data-hours]');\nconst minutes1 = document.querySelector('[data-minutes]');\nconst seconds1 = document.querySelector('[data-seconds]');\nlet intervalId = null;\nlet userselectedDates;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    userselectedDates = selectedDates[0].getTime();\n    if (userselectedDates < Date.now()) {\n      Notify.failure('Please choose a date in the future', {\n        position: 'center-top',\n      });\n      return;\n    }\n    startBtn.disabled = false;\n    clearClockFace();\n  },\n};\nflatpickr('#datetime-picker', options);\n\nstartBtn.addEventListener('click', () => {\n  input.disabled = true;\n  startBtn.disabled = true;\n  start();\n});\n\nfunction start() {\n  intervalId = setInterval(() => {\n    const currentTime = Date.now();\n    if (currentTime >= userselectedDates) {\n      stop();\n      input.disabled = false;\n      startBtn.disabled = true;\n      Notify.info('Time is up', {\n        position: 'center-top',\n      });\n      return;\n    }\n    let deltaTime = userselectedDates - currentTime;\n    updateClockFace(convertMs(deltaTime));\n    console.log('timer on');\n  }, 1000);\n}\n\nfunction stop() {\n  clearInterval(intervalId);\n  console.log('timer off');\n}\n\nfunction updateClockFace({ days, hours, minutes, seconds }) {\n  days1.textContent = `${days}`;\n  hours1.textContent = `${hours}`;\n  minutes1.textContent = `${minutes}`;\n  seconds1.textContent = `${seconds}`;\n}\n\nfunction clearClockFace() {\n  updateClockFace(convertMs(0));\n  stop();\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = addLeadingZero(Math.floor(ms / day));\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["$dbdyf","parcelRequire","$84b9dae4df53835d$var$input","document","querySelector","$84b9dae4df53835d$var$startBtn","disabled","$84b9dae4df53835d$var$userselectedDates","$84b9dae4df53835d$var$days1","$84b9dae4df53835d$var$hours1","$84b9dae4df53835d$var$minutes1","$84b9dae4df53835d$var$seconds1","$84b9dae4df53835d$var$intervalId","$84b9dae4df53835d$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","getTime","now","$h6c0i","Notify","failure","position","$84b9dae4df53835d$var$updateClockFace","$84b9dae4df53835d$var$convertMs","$84b9dae4df53835d$var$stop","clearInterval","console","log","param","days","hours","minutes","seconds","textContent","concat","ms","minute","second","hour","day","$84b9dae4df53835d$var$addLeadingZero","Math","floor","value","String","padStart","default","addEventListener","setInterval","currentTime","info"],"version":3,"file":"02-timer.537d34ef.js.map"}