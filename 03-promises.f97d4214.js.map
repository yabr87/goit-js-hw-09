{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAIpC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAZPL,EAAKa,iBAAiB,UAgBtB,SAAsBC,GACpBA,EAAMC,iBACN,IAAIC,EAAQC,OAAOjB,EAAKkB,SAASb,MAAMc,OACnCC,EAAOH,OAAOjB,EAAKkB,SAASE,KAAKD,OACjCE,EAASJ,OAAOjB,EAAKkB,SAASG,OAAOF,OAEzC,GAAIH,EAAQ,GAAKI,EAAO,GAAKC,GAAU,EAEvB,YADdC,MAAM,qBAGR,IAAK,IAAIC,EAAW,EAAGA,GAAYF,EAAQE,IACzCpB,EAAcoB,EAAUP,GACrBQ,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBP,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,MAAK,CAC9DwB,SAAO,IAGXC,QAAQC,IAAI,uBAAwCH,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAE3D2B,OAAM,SAAAP,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBP,EAAA4B,OAAOO,QAAQ,sBAAuCL,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,MAAK,CAC7DwB,SAAO,IAGXC,QAAQC,IAAI,sBAAqCH,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAE3DW,GAASI,EAEXN,EAAMoB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  let deley = Number(form.elements.delay.value);\n  let step = Number(form.elements.step.value);\n  let amount = Number(form.elements.amount.value);\n\n  if (deley < 0 || step < 0 || amount <= 0) {\n    alert('Зповніть ві поля.');\n    return;\n  }\n  for (let position = 1; position <= amount; position++) {\n    createPromise(position, deley)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          useIcon: false,\n          // timeout: 5000,\n        });\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          useIcon: false,\n          // timeout: 5000,\n        });\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    deley += step;\n  }\n  event.currentTarget.reset();\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","deley","Number","elements","value","step","amount","alert","position1","then","param","Notify","success","concat","useIcon","console","log","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.f97d4214.js.map"}