{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,UAgBtB,SAAsBC,G,kBAdtB,IAAuBC,EACfC,GADeD,EAyBLE,EAxBVD,EAAgBE,KAAKC,SAAW,GAE/B,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLP,EACFK,IAEAC,G,GAEDP,E,KAgBAS,MAAK,WACJhB,EAAAiB,OAAOC,QAAQ,uBAAwCC,OAAfC,EAAS,QAAYD,OAANV,EAAM,MAAK,CAC9DY,SAAO,G,IAGZC,OAAM,WACLtB,EAAAiB,OAAOM,QAAQ,sBAAqCJ,OAAfC,EAAS,QAAYD,OAANV,EAAM,MAAK,CAC7DY,SAAS,G,IAGfZ,GAASe,C,EArBXlB,EAAMmB,iBACN,IAAIhB,EAAQiB,OAAOxB,EAAKyB,SAASpB,MAAMqB,OACnCJ,EAAOE,OAAOxB,EAAKyB,SAASH,KAAKI,OACjCC,EAASH,OAAOxB,EAAKyB,SAASE,OAAOD,OAEzC,GAAInB,EAAQ,GAAKe,EAAO,GAAKK,GAAU,EAErC,YADAC,MAAM,sBAGR,IAAK,IAAIC,EAAW,EAAGA,GAAYF,EAAQE,IAAUC,EAAAD,GAcrDzB,EAAM2B,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve();\n      } else {\n        reject();\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  let deley = Number(form.elements.delay.value);\n  let step = Number(form.elements.step.value);\n  let amount = Number(form.elements.amount.value);\n\n  if (deley < 0 || step < 0 || amount <= 0) {\n    alert('Зповніть вcі поля.');\n    return;\n  }\n  for (let position = 1; position <= amount; position++) {\n    createPromise(deley)\n      .then(() => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${deley}ms`, {\n          useIcon: false,\n        });\n      })\n      .catch(() => {\n        Notify.failure(`❌ Rejected promise ${position} in ${deley}ms`, {\n          useIcon: false,\n        });\n      });\n    deley += step;\n  }\n  event.currentTarget.reset();\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","delay","shouldResolve","deley","Math","random","Promise","resolve","reject","setTimeout","then","Notify","success","concat","position","useIcon","catch","failure","step","preventDefault","Number","elements","value","amount","alert","position1","_loop","currentTarget","reset"],"version":3,"file":"03-promises.ef7aa92f.js.map"}