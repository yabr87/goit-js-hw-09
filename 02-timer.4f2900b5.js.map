{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aAIA,MAAMC,EAAQC,SAASC,cAAc,oBAC/BC,EAAWF,SAASC,cAAc,gBACxCC,EAASC,UAAW,EACpB,MAAMC,EAAQJ,SAASC,cAAc,eAC/BI,EAASL,SAASC,cAAc,gBAChCK,EAAWN,SAASC,cAAc,kBAClCM,EAAWP,SAASC,cAAc,kBACxC,IACIO,EADAC,EAAa,KAGjB,MAAMC,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EAEjBC,QAAQC,GACNT,EAAoBS,EAAc,GAAGC,UACjCV,EAAoBM,KAAKK,MAC3BC,EAAAC,OAAOC,QAAQ,uCAGjBpB,EAASC,UAAW,EAyCtBoB,EAAgBC,EAAU,IAC1BC,I,GAdF,SAASA,IACPC,cAAcjB,GACdkB,QAAQC,IAAI,Y,CAGd,SAASL,GAAgBM,KAAEA,EAAIC,MAAEA,EAAKC,QAAEA,EAAOC,QAAEA,IAC/C5B,EAAM6B,YAAc,GAAGJ,IACvBxB,EAAO4B,YAAc,GAAGH,IACxBxB,EAAS2B,YAAc,GAAGF,IAC1BxB,EAAS0B,YAAc,GAAGD,G,CAQ5B,SAASR,EAAUU,GAEjB,MACMC,EAASC,IACTC,EAAOF,KACPG,EAAa,GAAPD,EASZ,MAAO,C,KAPME,EAAeC,KAAKC,MAAMP,EAAKI,I,MAC9BC,EAAeC,KAAKC,MAAMP,EAAMI,EAAOD,I,QACrCE,EAAeC,KAAKC,MAAMP,EAAOI,EAAOD,EAAQF,I,QAChDI,EACdC,KAAKC,MAAMP,EAAQI,EAAOD,EAAQF,EATrB,M,CAejB,SAASI,EAAeG,GACtB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,EA3DnC,EAAA/C,EAAAgD,SAAU,mBAAoBnC,GAE9BR,EAAS4C,iBAAiB,SAAS,KACjC/C,EAAMI,UAAW,EACjBD,EAASC,UAAW,EAKpBM,EAAasC,aAAY,KACvB,MAAMC,EAAclC,KAAKK,MACzB,GAAI6B,GAAexC,EAKjB,OAJAiB,IACA1B,EAAMI,UAAW,EACjBD,EAASC,UAAW,OACpBiB,EAAAC,OAAO4B,KAAK,cAId1B,EAAgBC,EADAhB,EAAoBwC,IAEpCrB,QAAQC,IAAI,WAAW,GACtB,IAhBI","sources":["src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst input = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nstartBtn.disabled = true;\nconst days1 = document.querySelector('[data-days]');\nconst hours1 = document.querySelector('[data-hours]');\nconst minutes1 = document.querySelector('[data-minutes]');\nconst seconds1 = document.querySelector('[data-seconds]');\nlet intervalId = null;\nlet userselectedDates;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    userselectedDates = selectedDates[0].getTime();\n    if (userselectedDates < Date.now()) {\n      Notify.failure('Please choose a date in the future');\n      return;\n    }\n    startBtn.disabled = false;\n    clearClockFace();\n  },\n};\nflatpickr('#datetime-picker', options);\n\nstartBtn.addEventListener('click', () => {\n  input.disabled = true;\n  startBtn.disabled = true;\n  start();\n});\n\nfunction start() {\n  intervalId = setInterval(() => {\n    const currentTime = Date.now();\n    if (currentTime >= userselectedDates) {\n      stop();\n      input.disabled = false;\n      startBtn.disabled = true;\n      Notify.info('Time is up');\n      return;\n    }\n    let deltaTime = userselectedDates - currentTime;\n    updateClockFace(convertMs(deltaTime));\n    console.log('timer on');\n  }, 1000);\n}\n\nfunction stop() {\n  clearInterval(intervalId);\n  console.log('timer off');\n}\n\nfunction updateClockFace({ days, hours, minutes, seconds }) {\n  days1.textContent = `${days}`;\n  hours1.textContent = `${hours}`;\n  minutes1.textContent = `${minutes}`;\n  seconds1.textContent = `${seconds}`;\n}\n\nfunction clearClockFace() {\n  updateClockFace(convertMs(0));\n  stop();\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = addLeadingZero(Math.floor(ms / day));\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["$fbklV","parcelRequire","$40d383fb392a7037$var$input","document","querySelector","$40d383fb392a7037$var$startBtn","disabled","$40d383fb392a7037$var$days1","$40d383fb392a7037$var$hours1","$40d383fb392a7037$var$minutes1","$40d383fb392a7037$var$seconds1","$40d383fb392a7037$var$userselectedDates","$40d383fb392a7037$var$intervalId","$40d383fb392a7037$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","getTime","now","$iQIUW","Notify","failure","$40d383fb392a7037$var$updateClockFace","$40d383fb392a7037$var$convertMs","$40d383fb392a7037$var$stop","clearInterval","console","log","days","hours","minutes","seconds","textContent","ms","minute","second","hour","day","$40d383fb392a7037$var$addLeadingZero","Math","floor","value","String","padStart","default","addEventListener","setInterval","currentTime","info"],"version":3,"file":"02-timer.4f2900b5.js.map"}